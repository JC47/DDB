--TRIGGERS NECESARIOS PARA 7 EJERCICIOS DEL EXAMEN
--CALETTE CORNELIO JAVIER

CREATE OR REPLACE TRIGGER VALIDA_DIAS
BEFORE INSERT ON SALARIO FOR EACH ROW
DECLARE
BEGIN
    IF :NEW.DIAS > 15 THEN
      RAISE_APPLICATION_ERROR (-20001,'EL VALOR DEL CAMPO DIAS DEBE SER MENOR A 15');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER VALIDA_CURP
BEFORE INSERT ON EMPLEADO FOR EACH ROW
DECLARE
BEGIN
    IF NOT REGEXP_LIKE(:NEW.CURP,'^[A-Z][AEIOU][A-Z]{2}[0-9]{2}(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[HM](AS|BC|BS|CC|CS|CH|CL|CM|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|NE)[B-DF-HJ-NP-TV-Z]{3}[0-9A-Z][0-9]$') THEN
      RAISE_APPLICATION_ERROR (-20001,'CURP MAL REALIZADA');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER VALIDA_RFC
BEFORE INSERT ON EMPLEADO FOR EACH ROW
DECLARE
BEGIN
    IF NOT REGEXP_LIKE(:NEW.RFC,'^[A-Z][AEIOU][A-Z]{2}[0-9]{2}(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[0-9A-Z]{3}$') THEN
      RAISE_APPLICATION_ERROR (-20001,'RFC MAL REALIZADO');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER VALIDA_CLAVE
BEFORE INSERT ON EMPLEADO FOR EACH ROW
DECLARE
  CLAVE VARCHAR2(5);
  RFC VARCHAR2(5);
BEGIN
    CLAVE := SUBSTR(:NEW.clave_empleado,5,3);
    RFC := SUBSTR(:NEW.RFC,1,3);

    IF NOT REGEXP_LIKE(:NEW.clave_empleado,'^[0-9]{4}[A-Z][AEIOU][A-Z][0-9a-fA-F]{5}$') THEN
      RAISE_APPLICATION_ERROR (-20001,'CLAVE MAL REALIZADA');
    END IF;

    IF NOT UTL_MATCH.EDIT_DISTANCE(CLAVE, RFC) <= 0   THEN
      RAISE_APPLICATION_ERROR (-20001,'LA CLAVE Y EL RFC NO COINCIDEN');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER VALIDA_TEXTO
BEFORE INSERT ON OBLIGACION FOR EACH ROW
DECLARE
BEGIN
    IF REGEXP_LIKE(:NEW.TEXTO,'(MV|NP|NB|mv|np|nb)') THEN
      RAISE_APPLICATION_ERROR (-20001,'EL TEXTO CONTIENE COMBINACIONES DE LETRAS PROHIBIDAS');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER VALIDA_MONTO
BEFORE INSERT ON SALARIO FOR EACH ROW
DECLARE
BEGIN
    IF NOT REGEXP_LIKE(:NEW.MONTO,'^\$\([0-9]{1,3}([\,][0-9]{3})*\.[0-9]{2}\)$') THEN
      IF NOT REGEXP_LIKE(:NEW.MONTO,'^\$[0-9]{1,3}([\,][0-9]{3})*\.[0-9]{2}$') THEN
        RAISE_APPLICATION_ERROR (-20001,'MONTO ENVIADO EN EL FORMATO EQUIVOCADO');
      END IF;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER VALIDA_PARENTESIS
BEFORE INSERT ON SALARIO FOR EACH ROW
DECLARE
cadena SALARIO.FORMULA%TYPE := :NEW.FORMULA;
var VARCHAR2(5);
cadenapa VARCHAR2(5) := '(';
cadenapc VARCHAR2(5) := ')';
PA NUMBER := 0;
PC NUMBER := 0;
BEGIN
FOR i IN 1..LENGTH(cadena) LOOP
 var := substr(cadena,i,1);
 IF UTL_MATCH.EDIT_DISTANCE(var, cadenapa) <= 0   THEN
  PA := PA + 1;
 END IF;
 IF UTL_MATCH.EDIT_DISTANCE(var, cadenapc) <= 0   THEN
  PC := PC + 1;
 END IF;
END LOOP;
  IF NOT PA=PC THEN
  RAISE_APPLICATION_ERROR (-20001,'LOS PARENTESIS DE LA FORMULA NO ESTAN BALANCEADOS');
  END IF;
END;
/

SELECT TRIGGER_NAME,TABLE_NAME,STATUS FROM USER_TRIGGERS WHERE TRIGGER_NAME LIKE '%VALIDA%';
